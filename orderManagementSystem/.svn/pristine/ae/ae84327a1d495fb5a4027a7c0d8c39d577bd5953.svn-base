package com.want.controller;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.want.dto.Customer;
import com.want.dto.OT_RETURN;
import com.want.po.PackageInfo;
import com.want.service.ICreateOrderService;
import com.want.service.IOrderWebService;
import com.want.vo.IT_EKKO;
import com.want.vo.IT_EKPO;
import com.want.vo.OrderDetail;
import com.want.vo.OrderInfo;

@CrossOrigin
@RestController 
public class CreateOrderController {
	
	@Autowired
    private IOrderWebService webService;
	
	@Autowired
    private ICreateOrderService service;
	
	// 创建订单
	@PostMapping("/createOrder") 
	public OT_RETURN createOrder(@RequestBody OrderInfo orderInfo) { 
		IT_EKKO order=new IT_EKKO();
		List<IT_EKPO> orderDetail=new ArrayList<IT_EKPO>();
		order.setORDER_CODE(orderInfo.getOrderCode());
		order.setSALE_COMPANY(orderInfo.getSaleCompany());
		order.setDISTRIBUTION_CHANNEL(orderInfo.getDistributionChannel());
		order.setPRODUCT_GROUP(orderInfo.getProductGroup());
		order.setSAP_BUYER_CODE(orderInfo.getSapBuyerCode());
		order.setORDER_TIME(orderInfo.getOrderTime());
		order.setSAP_RECEIVER_CODE(orderInfo.getSapReceiverCode());
		order.setMEMO(orderInfo.getMemo());
		order.setCREATE_USER(orderInfo.getCreateUser());
		order.setCREATE_DATE(orderInfo.getCreateDate());
		List<OrderDetail> OrderDetails=orderInfo.getOrderDetail();
		for(int i=0;i<OrderDetails.size();i++) {
			IT_EKPO orderDetail1=new IT_EKPO();
			OrderDetail orderDetail2=OrderDetails.get(i);
			orderDetail1.setLINE_NUMBER(orderDetail2.getLineNumber());
			orderDetail1.setORDER_CODE(orderDetail2.getOrderCode());
			orderDetail1.setPRODUCT_CODE(orderDetail2.getProductCode());
			orderDetail1.setPRICE(orderDetail2.getPrice());
			orderDetail1.setUNIT(orderDetail2.getUnit());
			orderDetail1.setCOUNT(orderDetail2.getCount());
			orderDetail1.setSALE_TYPE(orderDetail2.getSaleType());
			orderDetail1.setSUM_AMOUNT(orderDetail2.getSumAmount());
			orderDetail1.setITEM_MEMO(orderDetail2.getItemMemo());
			orderDetail.add(orderDetail1);	
		}
		return webService.syncOrder(order, orderDetail);
	} 
	
	// 获取礼包信息
	@GetMapping("/packageList") 
	public List<PackageInfo> packageList() { 
		return service.packageList(); 
	} 
	
	@GetMapping("/customerList") 
	public List<Customer> customerList(String userId,String customerId,String customerName) { 
		return service.customerList(userId,customerId,customerName); 
	} 

}
