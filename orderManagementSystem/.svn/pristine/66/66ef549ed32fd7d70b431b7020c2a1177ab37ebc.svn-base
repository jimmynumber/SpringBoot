package com.want.service.impl;

import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.want.dto.ResponseEntity;
import com.want.mapper.AttenceMapper;
import com.want.service.IAttenceWebService;
import com.want.vo.Attence;

@Service
//@Transactional
public class AttenceWebServiceImpl implements IAttenceWebService {
	private static final Logger LOGGER = LoggerFactory.getLogger(AttenceWebServiceImpl.class);
	
	
	@Autowired
    private AttenceMapper attenceMapper;
	
	@Override
	public ResponseEntity accessAttence(List<Attence> list) {
		LOGGER.info("--AttenceWebService.accessAttence,attence:{} ",list+"");
		ResponseEntity result=new ResponseEntity();
		if (list == null || list.size()<= 0 ) {
			result.setType("E");
			result.setMessage("考勤资料不能为空");
			return result;
		}
		StringBuilder sb=new StringBuilder("异常ID：");
		int totalNum=list.size();
		int insertNum=0;
		int updateNum=0;
		int insertCot=0;
		int updateCot=0;
		for (Attence attence : list) {
			String id = attence.getId();
			String dataType=attence.getDataType();// 1：新增数据,2：更新数据
			if( dataType !=null && "1".equals(dataType.trim())){
				insertNum=insertNum+this.insert(attence, sb);
				insertCot++;
			}else {
				if (!attenceMapper.checkAttenceExist(id)) {
					insertNum=insertNum+this.insert(attence, sb);
					insertCot++;
				} else {
					updateNum=updateNum+this.update(attence, sb);
					updateCot++;
				}
			}
		}
		if (totalNum == (insertNum+updateNum)) {
			result.setType("S");
			String msg="成功接收%s笔考勤资料,其中新增%d笔,更新%d笔";
			msg=String.format(msg,totalNum,insertNum,updateNum );
			result.setMessage(msg);
		}else {
			result.setType("E");
			String msg="接收%s笔考勤资料,其中新增成功%d笔,新增失败%d笔,更新成功%d笔,更新失败%d笔";
			msg=String.format(msg,totalNum,insertNum,(insertCot-insertNum),updateNum,(updateCot-updateNum) );
			result.setMessage(msg);
			result.setEid(sb.toString().substring(0, sb.toString().length()-2));
		}
		return result;
	}
   private int insert(Attence attence,StringBuilder sb) {
	   try {
			attenceMapper.insertAttence(attence);
			return 1;
		} catch (Exception e) {
			sb.append(attence.getId()+" , ");
			LOGGER.error("--AttenceWebService.accessAttence.insertAttence,Exception:{} ",e);
			return 0;
		}
   }
   private int update(Attence attence,StringBuilder sb) {
	   try {
		   attenceMapper.updateAttence(attence);
		   return 1;
	   } catch (Exception e) {
		   sb.append(attence.getId()+" , ");
		   LOGGER.error("--AttenceWebService.accessAttence.updateAttence,Exception:{} ",e);
		   return 0;
	   }
   }
	
}
